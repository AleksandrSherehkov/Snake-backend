{
  "openapi": "3.0.0",
  "info": {
    "title": "Score API",
    "version": "1.0.0",
    "description": "API for managing scores in a game"
  },
  "servers": [
    {
      "url": "http://localhost:3000/api"
    }
  ],
  "paths": {
    "/scores": {
      "post": {
        "summary": "Add or update a score",
        "tags": ["Scores"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "score": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The score was successfully created or updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Score"
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          },
          "409": {
            "description": "Conflict"
          }
        }
      },
      "get": {
        "summary": "Get top 10 scores",
        "tags": ["Scores"],
        "responses": {
          "200": {
            "description": "List of top 10 scores",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Score"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    },
    "/check-unique-name": {
      "post": {
        "summary": "Check if a name is unique",
        "tags": ["Scores"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Returns if the name is unique",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "isUnique": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Score": {
        "type": "object",
        "required": ["name", "score"],
        "properties": {
          "id": {
            "type": "integer",
            "description": "The auto-generated id of the score"
          },
          "name": {
            "type": "string",
            "description": "The name of the player"
          },
          "score": {
            "type": "integer",
            "description": "The score of the player"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "description": "The date the score was created"
          }
        },
        "example": {
          "id": 1,
          "name": "John Doe",
          "score": 100,
          "createdAt": "2024-07-06T12:34:56.789Z"
        }
      }
    }
  }
}
